{"mappings":"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","sources":["src/js/aside-categories.js","src/js/templates/create-categories.js","src/js/main-page.js","src/js/templates/create-book.js"],"sourcesContent":["import { SwaggerAPI } from './swagger-api';\nimport createCategoriesMarkup from './templates/create-categories';\n\nconst categoriesList = document.querySelector('.aside-list');\nconst categoriesTitle = document.querySelector('.aside-title')\nconst renderingCategories = document.querySelector('.main-content');\n\nconst swaggerCategoriesApi = new SwaggerAPI();\n\nconst createCategoriesItem = async () => {\n  try {\n    const { data } = await swaggerCategoriesApi.fetchBooksCategoryList();\n    const searchCategory = data.map(category => {\n      return `<a class=\"aside-link\"><li class=\"aside-item\">${category.list_name}</li></a>`;\n    }).join('');\n    categoriesList.innerHTML = searchCategory;\n  } catch (error) {\n    console.log(error);\n  };\n};\ncreateCategoriesItem();\n\n\nlet activeCategoryLink = null;\n\n\n//ф-я відображення книг\nconst onCategoriesLinkClick = event => {\n  const value = event.target.textContent;\n  swaggerCategoriesApi.categoryName = value;\n  \n   if (activeCategoryLink) {\n    activeCategoryLink.classList.remove('active'); \n  };\n  \n  activeCategoryLink = event.target\n  activeCategoryLink.classList.add('active'); \n  categoriesTitle.classList.remove('active');\n\n  const createMarkupCategories = async () => {\n    try {\n      const { data } = await swaggerCategoriesApi.fetchBooksByCategory(value);\n      console.log(data);\n\n      const listName = data[0].list_name;\n  \n      const words = listName.split(' ');\n      const halfIndex = words.length / 2;\n\n      const firstHalf = words.slice(0, halfIndex).join(' ');\n      const secondHalf = words.slice(halfIndex).join(' ');\n\n      const decoratedListName = `${firstHalf} <span class=\"categories-title-decor\">${secondHalf}</span>`;\n      renderingCategories.innerHTML = `<h1 class=\"categories-title\">${decoratedListName}</h1> <ul class=\"categories-item\">${createCategoriesMarkup(\n        data\n      )}</ul>`;\n\n    } catch (error) {\n      console.log(error);\n    };\n  };\n  createMarkupCategories()\n}\ncategoriesList.addEventListener('click', onCategoriesLinkClick);\n","export default function createCategoriesMarkup(bookInfo) {\n\n  const markup = bookInfo\n    .map(book => {\n      const { book_image, description, title, author } = book;\n\n      return `\n\n<li class=\"category-list-item\">\n<a class=\"book-link\" href=\"\">\n<div class=\"book-thumb\">\n<img class=\"book-image\" src=\"${book_image}\" alt=\"${description}\" />\n<div class=\"book-overlay\">\n<p class=\"book-overlay-text\">quick view</p>\n</div>\n</div>\n<div class=\"book-card-content\">\n<h2 class=\"book-title\">${title}</h2>\n<p class=\"book-author\">${author}</p>\n</div>\n</a>\n</li>`;\n    })\n    .join('');\n  return markup;\n}\n\n","import { SwaggerAPI } from './swagger-api.js';\nimport createBook from './templates/create-book.js';\n\nconst booksContainer = document.querySelector('.category-list');\nconst title = document.querySelector('.home-title');\n\nconst topBooksAPI = new SwaggerAPI();\n\nlet bodyWidth = 0;\n\nonload = event => {\n  bodyWidth = event.target.body.clientWidth;\n};\n\ncreateBlock();\n\nasync function createBlock() {\n  try {\n    const { data } = await topBooksAPI.fetchTopBooks();\n\n    for (let i = 0; i < 4; i++) {\n      let topBooks = data[i].books;\n      let markUpCount = 0;\n\n      if (bodyWidth <= 767) {\n        markUpCount = 1;\n      }\n      if (bodyWidth >= 768 && bodyWidth < 1440) {\n        markUpCount = 3;\n      }\n      if (bodyWidth >= 1440) {\n        markUpCount = 5;\n      }\n\n      const markup = `<li class=\"category-list-item top-list-item\">\n        <p class=\"category-name\" data-category-name=\"${\n          topBooks[0].list_name\n        }\">${topBooks[0].list_name}</p>\n        <ul class=\"books-list\">\n          ${createBook(topBooks.slice(0, markUpCount))}\n        </ul>\n       <button class=\"category-list-button\">see more</button>  \n      </li>`;\n\n      booksContainer.insertAdjacentHTML('beforeend', markup);\n      findBtn();\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction findBtn() {\n  const seeMoreBtnEls = document.querySelectorAll('.category-list-button');\n\n  seeMoreBtnEls.forEach(seeMoreBtn => {\n    seeMoreBtn.addEventListener('click', onSeeMoreBtnClick);\n  });\n}\n\nasync function onSeeMoreBtnClick(event) {\n  try {\n    const name =\n      event.target.previousElementSibling.previousElementSibling.textContent;\n\n    topBooksAPI.categoryName = name;\n    const { data } = await topBooksAPI.fetchBooksByCategory();\n\n    title.innerHTML = divideTitleElements(name);\n    booksContainer.classList.add('category-list-click');\n    booksContainer.innerHTML = createBook(data);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction divideTitleElements(categoryName) {\n  const words = categoryName.split(' ');\n  const halfIndex = words.length / 2;\n\n  const firstHalf = words.slice(0, halfIndex).join(' ');\n  const secondHalf = words.slice(halfIndex).join(' ');\n\n  return `${firstHalf} <span class=\"home-title-decor\">${secondHalf}</span>`;\n}\n","export default function createBook(bookInfo) {\n  const markup = bookInfo\n    .map(book => {\n      const { book_image, description, title, author, _id } = book;\n      return `<li class=\"books-list-item\">\n                 <a class=\"book-link\" href=\"\" data-id=\"${_id}\">\n                    <div class=\"book-thumb\">\n                      <img class=\"book-image\" src=\"${book_image}\" alt=\"${description}\" />\n\n                        <div class=\"book-overlay\">\n                       <p class=\"book-overlay-text\">quick view</p>\n                       </div>\n                       </div>                     \n                     <div class=\"book-card-content\">\n                     <h2 class=\"book-title\">${title}</h2>\n                     <p class=\"book-author\">${author}</p>\n                     </div>\n                 </a>                    \n              </li>`;\n    })\n    .join('');\n  return markup;\n}\n"],"names":["$b2XdZ","parcelRequire","$8624f18deccb59bb$var$categoriesList","document","querySelector","$8624f18deccb59bb$var$categoriesTitle","$8624f18deccb59bb$var$renderingCategories","$8624f18deccb59bb$var$swaggerCategoriesApi","SwaggerAPI","async","data","fetchBooksCategoryList","searchCategory","map","category","list_name","join","innerHTML","error","console","log","$8624f18deccb59bb$var$createCategoriesItem","$8624f18deccb59bb$var$activeCategoryLink","addEventListener","event","value","target","textContent","categoryName","classList","remove","add","fetchBooksByCategory","words","split","halfIndex","length","firstHalf","slice","decoratedListName","bookInfo","book","book_image","description","title","author","createMarkupCategories","$1f74396456af3c8a$export$2e2bcd8739ae039","_id","$866dea3744b84f28$var$booksContainer","$866dea3744b84f28$var$title","$866dea3744b84f28$var$topBooksAPI","$866dea3744b84f28$var$bodyWidth","$866dea3744b84f28$var$findBtn","querySelectorAll","forEach","seeMoreBtn","$866dea3744b84f28$var$onSeeMoreBtnClick","name","previousElementSibling","secondHalf","$866dea3744b84f28$var$divideTitleElements","onload","body","clientWidth","fetchTopBooks","i","topBooks","books","markUpCount","markup","insertAdjacentHTML","$866dea3744b84f28$var$createBlock"],"version":3,"file":"index.90502620.js.map"}