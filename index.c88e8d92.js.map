{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,IAAMC,EAAiBC,SAASC,cAAc,eACxCC,EAAsBF,SAASC,cAAc,iBACnDE,QAAQC,IAAIF,GAEZ,IAAMG,EAAuB,IAAI,EAAAR,EAAAS,YAIjCD,EACGE,yBACAC,MAAK,SAAAC,G,IACEC,EADKD,EAAJE,KAEJC,KAAI,SAAAC,GACH,MAAO,gDAAmEC,OAAnBD,EAASE,UAAU,Y,IAE3EC,KAAK,IACRjB,EAAekB,UAAYP,C,IAE5BQ,OAAM,SAAAC,GACLhB,QAAQC,IAAIe,E,IAIhBC,sBAAwB,SAAAC,GACtB,IAAMC,EAAQD,EAAME,OAAOC,YAC3BnB,EAAqBoB,aAAeH,EAEpCjB,EAAqBqB,qBAAqBJ,GACvCd,MAAK,SAAAC,G,IAAGE,EAAIF,EAAJE,KAGDgB,EAFWhB,EAAK,GAAGI,UAEFa,MAAM,KACvBC,EAAYF,EAAMG,OAAS,EAE3BC,EAAYJ,EAAMK,MAAM,EAAGH,GAAWb,KAAK,KAC3CiB,EAAaN,EAAMK,MAAMH,GAAWb,KAAK,KAGzCkB,EAAoB,GAAqDpB,OAAlDiB,EAAU,0CAAmDjB,OAAXmB,EAAW,WAC1F/B,EAAoBe,UAAY,gCAAsFH,OAAtDoB,EAAkB,sCAAiEpB,OAANH,ECxC9IC,KAAI,SAAAuB,GACH,IAAQC,EAA2CD,EAA3CC,WAAYC,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,MAAOC,EAAWJ,EAAXI,OAExC,MAAO,oGAIsCzB,OAApBsB,EAAW,WAEjBtB,OAF0BuB,EAAY,kEAGtCvB,OADAwB,EAAM,kCACCxB,OAAPyB,EAAO,4B,IAK3BvB,KAAK,IDyB+I,Q,IAEpJE,OAAM,SAAAC,GACLhB,QAAQC,IAAIe,E,KAIlBpB,EAAeyC,iBAAiB,QAASpB,uB,iCElDzC,IAAAqB,EAAA3C,EAAA,S,0BCAe,SAAA4C,EAAoBC,GAqBjC,OApBeA,EACZ/B,KAAI,SAAAuB,GACH,IAAQC,EAAgDD,EAAhDC,WAAYC,EAAoCF,EAApCE,YAAaC,EAAuBH,EAAvBG,MAAOC,EAAgBJ,EAAhBI,OAAQK,EAAQT,EAARS,IAChD,MAAO,wFAGwC9B,OAFI8B,EAAI,yGAEY9B,OAApBsB,EAAW,WAOlBtB,OAP2BuB,EAAY,yTAQvCvB,OADAwB,EAAM,uDACCxB,OAAPyB,EAAO,oG,IAKhDvB,KAAK,G,CDjBV,IAAM6B,EAAiB7C,SAASC,cAAc,kBAExC6C,EAAc,IAAI,EAAAjD,EAAAS,YAEpByC,EAAY,E,SAQDC,I,OAAAA,EAAfC,EAAAR,EAAA,CAAAQ,EAAAC,GAAAC,MAAA,SAAAC,I,IAEYzC,EAIC0C,EACHC,EACAC,EAYEC,E,2FAlBeV,EAAYW,gB,OAInC,IAJM9C,EAAM+C,EAAAC,KAAJhD,KAERR,QAAQC,IAAIO,GAEH0C,EAAI,EAAGA,EAAI,EAAGA,IACjBC,EAAW3C,EAAK0C,GAAGO,MACnBL,EAAc,EAEdR,GAAa,MACfQ,EAAc,GAEZR,GAAa,KAAOA,EAAY,OAClCQ,EAAc,GAEZR,GAAa,OACfQ,EAAc,GAGVC,EAAS,qEAGT1C,OAFuBwC,EAAS,GAAGvC,UAAU,qDAEFD,OAA3C4B,EAAWY,EAAStB,MAAM,EAAGuB,IAAc,iGAKjDV,EAAegB,mBAAmB,YAAaL,G,gDAGjDrD,QAAQC,IAAGsD,EAAAI,I,0DA/BWC,MAAAC,KAAAC,U,CAN1BC,OAAS,SAAA7C,GACP0B,EAAY1B,EAAME,OAAO4C,KAAKC,W,aAKjBpB,EAAWe,MAAAC,KAAAC,U,CAF1BI,G","sources":["src/js/aside-categories.js","src/js/templates/create-categories.js","src/js/main-page.js","src/js/templates/create-book.js"],"sourcesContent":["import { SwaggerAPI } from './swagger-api';\nimport createCategoriesMarkup from './templates/create-categories'\n\n\nconst categoriesList = document.querySelector('.aside-list');\nconst renderingCategories = document.querySelector('.main-content')\nconsole.log(renderingCategories);\n\nconst swaggerCategoriesApi = new SwaggerAPI();\n\n\n\nswaggerCategoriesApi\n  .fetchBooksCategoryList()\n  .then(({ data }) => {\n    const searchCategory = data\n      .map(category => {\n        return `<a class=\"aside-link\"><li class=\"aside-item\">${category.list_name}</li></a>`;\n      })\n      .join('');\n    categoriesList.innerHTML = searchCategory;\n  })\n  .catch(error => {\n    console.log(error);\n  });\n\n//ф-я відображення книг\nonCategoriesLinkClick = event => {\n  const value = event.target.textContent;\n  swaggerCategoriesApi.categoryName = value;\n  \n  swaggerCategoriesApi.fetchBooksByCategory(value)\n    .then(({ data }) => {\n      const listName = data[0].list_name;\n\n      const words = listName.split(\" \");\n      const halfIndex = words.length / 2;\n\n      const firstHalf = words.slice(0, halfIndex).join(\" \");\n      const secondHalf = words.slice(halfIndex).join(\" \");\n\n\n      const decoratedListName = `${firstHalf} <span class=\"categories-title-decor\">${secondHalf}</span>`;\n      renderingCategories.innerHTML = `<h1 class=\"categories-title\">${decoratedListName}</h1> <ul class=\"categories-item\">${createCategoriesMarkup(data)}</ul>`;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  };\n\ncategoriesList.addEventListener('click', onCategoriesLinkClick);\n","export default function createCategoriesMarkup(bookInfo) {\n\n  const markup = bookInfo\n    .map(book => {\n      const { book_image, description, title, author } = book;\n\n      return `\n\n<li class=\"category-list-item\">\n<a class=\"book-link\" href=\"\">\n<img class=\"book-image\" src=\"${book_image}\" alt=\"${description}\" />\n<div class=\"book-card-content\">\n<h2 class=\"book-title\">${title}</h2>\n<p class=\"book-author\">${author}</p>\n</div>\n</a>\n</li>`;\n    })\n    .join('');\n  return markup;\n}\n\n","import { SwaggerAPI } from './swagger-api.js';\nimport createBook from './templates/create-book.js';\n\nconst booksContainer = document.querySelector('.category-list');\n\nconst topBooksAPI = new SwaggerAPI();\n\nlet bodyWidth = 0;\n\nonload = event => {\n  bodyWidth = event.target.body.clientWidth;\n};\n\ncreateBlock();\n\nasync function createBlock() {\n  try {\n    const { data } = await topBooksAPI.fetchTopBooks();\n\n    console.log(data);\n\n    for (let i = 0; i < 4; i++) {\n      let topBooks = data[i].books;\n      let markUpCount = 0;\n\n      if (bodyWidth <= 767) {\n        markUpCount = 1;\n      }\n      if (bodyWidth >= 768 && bodyWidth < 1440) {\n        markUpCount = 3;\n      }\n      if (bodyWidth >= 1440) {\n        markUpCount = 5;\n      }\n\n      const markup = `<li class=\"category-list-item\">\n        <p class=\"category-name\">${topBooks[0].list_name}</p>\n        <ul class=\"books-list\">\n          ${createBook(topBooks.slice(0, markUpCount))}\n        </ul>\n       <button class=\"category-list-button\">see more</button>  \n      </li>`;\n\n      booksContainer.insertAdjacentHTML('beforeend', markup);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n","export default function createBook(bookInfo) {\n  const markup = bookInfo\n    .map(book => {\n      const { book_image, description, title, author, _id } = book;\n      return `<li class=\"books-list-item\">\n                 <a class=\"book-link\" href=\"\" data-id=\"${_id}\">\n                    <div class=\"book-thumb\">\n                      <img class=\"book-image\" src=\"${book_image}\" alt=\"${description}\" />\n\n                        <div class=\"book-overlay\">\n                       <p class=\"book-overlay-text\">quick view</p>\n                       </div>\n                       </div>                     \n                     <div class=\"book-card-content\">\n                     <h2 class=\"book-title\">${title}</h2>\n                     <p class=\"book-author\">${author}</p>\n                     </div>\n                 </a>                    \n              </li>`;\n    })\n    .join('');\n  return markup;\n}\n"],"names":["$hrrt1","parcelRequire","$8b6b1471fc91ee12$var$categoriesList","document","querySelector","$8b6b1471fc91ee12$var$renderingCategories","console","log","$8b6b1471fc91ee12$var$swaggerCategoriesApi","SwaggerAPI","fetchBooksCategoryList","then","param","searchCategory","data","map","category","concat","list_name","join","innerHTML","catch","error","onCategoriesLinkClick","event","value","target","textContent","categoryName","fetchBooksByCategory","words","split","halfIndex","length","firstHalf","slice","secondHalf","decoratedListName","book","book_image","description","title","author","addEventListener","$bpxeT","$92816cdb1debc4c6$export$2e2bcd8739ae039","bookInfo","_id","$6b1db6d68125062a$var$booksContainer","$6b1db6d68125062a$var$topBooksAPI","$6b1db6d68125062a$var$bodyWidth","$6b1db6d68125062a$var$_createBlock","$parcel$interopDefault","$2TvXO","mark","_callee","i","topBooks","markUpCount","markup","fetchTopBooks","_ctx","sent","books","insertAdjacentHTML","t0","apply","this","arguments","onload","body","clientWidth","$6b1db6d68125062a$var$createBlock"],"version":3,"file":"index.c88e8d92.js.map"}