{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAiBC,SAASC,cAAc,eACxCC,EAAsBF,SAASC,cAAc,iBACnDE,QAAQC,IAAIF,GAEZ,MAAMG,EAAuB,IAAI,EAAAR,EAAAS,YAEjCD,EACGE,yBACAC,MAAK,EAACC,KAAEA,MACP,MAAMC,EAAiBD,EACpBE,KAAIC,GACI,gDAAgDA,EAASC,uBAEjEC,KAAK,IACRf,EAAegB,UAAYL,CAAc,IAE1CM,OAAMC,IACLd,QAAQC,IAAIa,EAAM,IA6BtBlB,EAAemB,iBAAiB,SAzBFC,IAC5B,MAAMC,EAAQD,EAAME,OAAOC,YAC3BjB,EAAqBkB,aAAeH,EAEpCf,EACGmB,qBAAqBJ,GACrBZ,MAAK,EAACC,KAAEA,MACP,MAEMgB,EAFWhB,EAAK,GAAGI,UAEFa,MAAM,KACvBC,EAAYF,EAAMG,OAAS,EAK3BC,EAAoB,GAHRJ,EAAMK,MAAM,EAAGH,GAAWb,KAAK,6CAC9BW,EAAMK,MAAMH,GAAWb,KAAK,cCrCtC,IAAgCiB,EDwCzC7B,EAAoBa,UAAY,gCAAgCc,sCCxCvBE,EDyCvCtB,ECvCSsB,EACZpB,KAAIqB,IACH,MAAMC,WAAEA,EAAUC,YAAEA,EAAWC,MAAEA,EAAKC,OAAEA,GAAWJ,EAEnD,MAAO,oGAIkBC,WAAoBC,kEAE1BC,kCACAC,4BAGnB,IAEDtB,KAAK,UDwBI,IAETE,OAAMC,IACLd,QAAQC,IAAIa,EAAM,GAClB,I,iCE9CNpB,EAAAC,EAAA,SAGA,MAAMuC,EAAiBrC,SAASC,cAAc,kBAExCqC,EAAc,IAAI,EAAAzC,EAAAS,YAExB,IAAIiC,EAAY,EAEhBC,OAASrB,IACPoB,EAAYpB,EAAME,OAAOoB,KAAKC,WAAW,EAK3CC,iBACE,IACE,MAAMlC,KAAEA,SAAe6B,EAAYM,gBAEnCzC,QAAQC,IAAIK,GAEZ,IAAK,IAAIoC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIC,EAAWrC,EAAKoC,GAAGE,MACnBC,EAAc,EAEdT,GAAa,MACfS,EAAc,GAEZT,GAAa,KAAOA,EAAY,OAClCS,EAAc,GAEZT,GAAa,OACfS,EAAc,GAGhB,MAAMC,EAAS,qEACcH,EAAS,GAAGjC,6DCpCZkB,EDsCZe,EAAShB,MAAM,EAAGkB,GCrCxBjB,EACZpB,KAAIqB,IACH,MAAMC,WAAEA,EAAUC,YAAEA,EAAWC,MAAEA,EAAKC,OAAEA,EAAMc,IAAEA,GAAQlB,EACxD,MAAO,wFAC4CkB,yGAEJjB,WAAoBC,yTAO3BC,uDACAC,oGAG1B,IAEftB,KAAK,mGDuBJuB,EAAec,mBAAmB,YAAaF,E,EAEjD,MAAOhC,GACPd,QAAQC,IAAIa,E,CC9CD,IAAoBc,C,CDanCqB,G","sources":["src/js/aside-categories.js","src/js/templates/create-categories.js","src/js/main-page.js","src/js/templates/create-book.js"],"sourcesContent":["import { SwaggerAPI } from './swagger-api';\nimport createCategoriesMarkup from './templates/create-categories';\n\nconst categoriesList = document.querySelector('.aside-list');\nconst renderingCategories = document.querySelector('.main-content');\nconsole.log(renderingCategories);\n\nconst swaggerCategoriesApi = new SwaggerAPI();\n\nswaggerCategoriesApi\n  .fetchBooksCategoryList()\n  .then(({ data }) => {\n    const searchCategory = data\n      .map(category => {\n        return `<a class=\"aside-link\"><li class=\"aside-item\">${category.list_name}</li></a>`;\n      })\n      .join('');\n    categoriesList.innerHTML = searchCategory;\n  })\n  .catch(error => {\n    console.log(error);\n  });\n\n//ф-я відображення книг\nconst onCategoriesLinkClick = event => {\n  const value = event.target.textContent;\n  swaggerCategoriesApi.categoryName = value;\n\n  swaggerCategoriesApi\n    .fetchBooksByCategory(value)\n    .then(({ data }) => {\n      const listName = data[0].list_name;\n\n      const words = listName.split(' ');\n      const halfIndex = words.length / 2;\n\n      const firstHalf = words.slice(0, halfIndex).join(' ');\n      const secondHalf = words.slice(halfIndex).join(' ');\n\n      const decoratedListName = `${firstHalf} <span class=\"categories-title-decor\">${secondHalf}</span>`;\n      renderingCategories.innerHTML = `<h1 class=\"categories-title\">${decoratedListName}</h1> <ul class=\"categories-item\">${createCategoriesMarkup(\n        data\n      )}</ul>`;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\ncategoriesList.addEventListener('click', onCategoriesLinkClick);\n","export default function createCategoriesMarkup(bookInfo) {\n\n  const markup = bookInfo\n    .map(book => {\n      const { book_image, description, title, author } = book;\n\n      return `\n\n<li class=\"category-list-item\">\n<a class=\"book-link\" href=\"\">\n<img class=\"book-image\" src=\"${book_image}\" alt=\"${description}\" />\n<div class=\"book-card-content\">\n<h2 class=\"book-title\">${title}</h2>\n<p class=\"book-author\">${author}</p>\n</div>\n</a>\n</li>`;\n    })\n    .join('');\n  return markup;\n}\n\n","import { SwaggerAPI } from './swagger-api.js';\nimport createBook from './templates/create-book.js';\n\nconst booksContainer = document.querySelector('.category-list');\n\nconst topBooksAPI = new SwaggerAPI();\n\nlet bodyWidth = 0;\n\nonload = event => {\n  bodyWidth = event.target.body.clientWidth;\n};\n\ncreateBlock();\n\nasync function createBlock() {\n  try {\n    const { data } = await topBooksAPI.fetchTopBooks();\n\n    console.log(data);\n\n    for (let i = 0; i < 4; i++) {\n      let topBooks = data[i].books;\n      let markUpCount = 0;\n\n      if (bodyWidth <= 767) {\n        markUpCount = 1;\n      }\n      if (bodyWidth >= 768 && bodyWidth < 1440) {\n        markUpCount = 3;\n      }\n      if (bodyWidth >= 1440) {\n        markUpCount = 5;\n      }\n\n      const markup = `<li class=\"category-list-item\">\n        <p class=\"category-name\">${topBooks[0].list_name}</p>\n        <ul class=\"books-list\">\n          ${createBook(topBooks.slice(0, markUpCount))}\n        </ul>\n       <button class=\"category-list-button\">see more</button>  \n      </li>`;\n\n      booksContainer.insertAdjacentHTML('beforeend', markup);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n","export default function createBook(bookInfo) {\n  const markup = bookInfo\n    .map(book => {\n      const { book_image, description, title, author, _id } = book;\n      return `<li class=\"books-list-item\">\n                 <a class=\"book-link\" href=\"\" data-id=\"${_id}\">\n                    <div class=\"book-thumb\">\n                      <img class=\"book-image\" src=\"${book_image}\" alt=\"${description}\" />\n\n                        <div class=\"book-overlay\">\n                       <p class=\"book-overlay-text\">quick view</p>\n                       </div>\n                       </div>                     \n                     <div class=\"book-card-content\">\n                     <h2 class=\"book-title\">${title}</h2>\n                     <p class=\"book-author\">${author}</p>\n                     </div>\n                 </a>                    \n              </li>`;\n    })\n    .join('');\n  return markup;\n}\n"],"names":["$b2XdZ","parcelRequire","$8624f18deccb59bb$var$categoriesList","document","querySelector","$8624f18deccb59bb$var$renderingCategories","console","log","$8624f18deccb59bb$var$swaggerCategoriesApi","SwaggerAPI","fetchBooksCategoryList","then","data","searchCategory","map","category","list_name","join","innerHTML","catch","error","addEventListener","event","value","target","textContent","categoryName","fetchBooksByCategory","words","split","halfIndex","length","decoratedListName","slice","bookInfo","book","book_image","description","title","author","$866dea3744b84f28$var$booksContainer","$866dea3744b84f28$var$topBooksAPI","$866dea3744b84f28$var$bodyWidth","onload","body","clientWidth","async","fetchTopBooks","i","topBooks","books","markUpCount","markup","_id","insertAdjacentHTML","$866dea3744b84f28$var$createBlock"],"version":3,"file":"index.ca599c12.js.map"}